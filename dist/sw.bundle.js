if(!self.define){let e,i={};const n=(n,c)=>(n=new URL(n+".js",c).href,i[n]||new Promise((i=>{if("document"in self){const e=document.createElement("script");e.src=n,e.onload=i,document.head.appendChild(e)}else e=n,importScripts(n),i()})).then((()=>{let e=i[n];if(!e)throw new Error(`Module ${n} didnâ€™t register its module`);return e})));self.define=(c,r)=>{const s=e||("document"in self?document.currentScript.src:"")||location.href;if(i[s])return;let o={};const d=e=>n(e,s),a={module:{uri:s},exports:o,require:d};i[s]=Promise.all(c.map((e=>a[e]||d(e)))).then((e=>(r(...e),o)))}}define(["./workbox-5485516b"],(function(e){"use strict";self.addEventListener("message",(e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()})),e.precacheAndRoute([{url:"app.bundle.js",revision:"bfddf7d6df9c0ef43a712336966ed44a"},{url:"app.bundle.js.LICENSE.txt",revision:"4e0e34f265fae8f33b01b27ae29d9d6f"},{url:"app.webmanifest",revision:"fbfe036cc73e6227903363d8ec25e2d4"},{url:"favicon.png",revision:"269f8d7e20e27820ccf927d8baa2d589"},{url:"icons/icon-128x128.png",revision:"52fcb4b4981c578bc267221b9690c2f7"},{url:"icons/icon-144x144.png",revision:"adce56a15825620081265ed22da2fdbd"},{url:"icons/icon-152x152.png",revision:"18dfc96ecae8456b6b540e79a194eb5b"},{url:"icons/icon-192x192.png",revision:"d34523a9132a0c055c7df6ed08efc03f"},{url:"icons/icon-384x384.png",revision:"0a156bb96492cb1dcf6737d7b01b768d"},{url:"icons/icon-512x512.png",revision:"d2974611172074bd1e4c0f3c38bf0533"},{url:"icons/icon-72x72.png",revision:"1c754b3326050a72644cd425051d88b3"},{url:"icons/icon-96x96.png",revision:"0eb35b37927642c8bbfebd1e4a0954c2"},{url:"images/heros/hero-image_1.jpg",revision:"a2f444d9e2e43a5d0373b1a0d8cb2236"},{url:"images/heros/hero-image_2.jpg",revision:"49f78cae81de4f48caf1c2fe0271c828"},{url:"images/heros/hero-image_4.jpg",revision:"4ea98fe648a0b853ab379c928b5fd0bf"},{url:"index.html",revision:"5580d45c80cfd07a2865389f45576e64"}],{}),e.registerRoute((({url:e})=>e.href.startsWith("https://restaurant-api.dicoding.dev")),new e.StaleWhileRevalidate({cacheName:"restaurant-api",plugins:[]}),"GET"),e.registerRoute((({url:e})=>e.href.startsWith("https://restaurant-api.dicoding.dev/images/medium/")),new e.StaleWhileRevalidate({cacheName:"restaurant-image-api",plugins:[]}),"GET")}));
//# sourceMappingURL=sw.bundle.js.map
